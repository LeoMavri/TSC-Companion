// ==UserScript==
// @name         TSC Companion - Next
// @namespace    TSC
// @version      next-8
// @author       mavri [2402357]
// @description  A very early version of the new TSC Companion. Special thanks to Kwack [2190604]
// @copyright    2024, diicot.cc
// @icon         https://i.imgur.com/8eydsOA.png
// @updateURL    https://github.com/LeoMavri/TSC-Companion/raw/next/dist/tsc-companion.user.js
// @match        https://www.torn.com/profiles.php?*
// @match        https://www.torn.com/factions.php*
// @connect      api.torn.com
// @connect      tsc.diicot.cc
// @grant        GM.xmlHttpRequest
// @grant        GM_addStyle
// @run-at       document-end
// ==/UserScript==

(o=>{if(typeof GM_addStyle=="function"){GM_addStyle(o);return}const t=document.createElement("style");t.textContent=o,document.head.append(t)})(" body{--tsc-bg-color: #f0f0f0;--tsc-border-color: #ccc;--tsc-input-color: #ccc;--tsc-text-color: #000;--tsc-hover-color: #ddd}body.dark-mode{--tsc-bg-color: #333;--tsc-border-color: #444;--tsc-input-color: #504f4f;--tsc-text-color: #ccc;--tsc-hover-color: #555}table.tsc-stat-table{width:100%;border-collapse:collapse;color:var(--tsc-text-color);background-color:var(--tsc-bg-color)}table.tsc-stat-table th,table.tsc-stat-table td{border:1px solid var(--tsc-border-color);color:var(--tsc-text-color);padding:5px;text-align:center}table.tsc-stat-table th{background-color:var(--tsc-bg-color);color:var(--tsc-text-color)}.tsc-faction-spy{background-color:var(--tsc-bg-color);color:var(--tsc-text-color);border:1px solid var(--tsc-border-color);border-radius:5px;padding:3px 5px;cursor:pointer}.tsc-accordion{background-color:var(--tsc-bg-color);border:1px solid var(--tsc-border-color);border-radius:5px;margin:10px 0;padding:10px}.tsc-header{display:flex;justify-content:space-between;align-items:center;font-weight:700;font-size:1.2em;margin-top:10px;margin-bottom:10px}.tsc-header-username{font-style:italic;display:inline}.tsc-setting-entry{display:flex;align-items:center;gap:5px;margin-top:10px;margin-bottom:5px}.tsc-key-input{width:120px;padding-left:5px;background-color:var(--tsc-input-color);color:var(--tsc-text-color)}.tsc-button{background-color:var(--tsc-bg-color);color:var(--tsc-text-color);border:1px solid var(--tsc-border-color);transition:background-color .5s;border-radius:5px;padding:5px 10px;cursor:pointer}.tsc-button:hover{background-color:var(--tsc-hover-color);transition:background-color .5s}.tsc-blur{filter:blur(3px);transition:filter 2s}.tsc-blur:hover{filter:blur(0)} ");

(function () {
	'use strict';

	var k=Object.defineProperty;var T=(n,e,t)=>e in n?k(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var u=(n,e,t)=>(T(n,typeof e!="symbol"?e+"":e,t),t);const g={Colours:{Info:"#05668D",Warn:"#EDDEA4",Error:"#ff0000",Debug:"#5C415D"}};class v{constructor(e){u(this,"storageKey");this.storageKey=e;}get(e){return localStorage.getItem(`${this.storageKey}-${e}`)}set(e,t){localStorage.setItem(`${this.storageKey}-${e}`,t);}getToggle(e){return this.get(e)==="true"}getJSON(e){const t=this.get(e);return t===null?null:JSON.parse(t)}setJSON(e,t){this.set(e,JSON.stringify(t));}fullClear(){let e=0;for(let t=0;t<localStorage.length;t++){const r=localStorage.key(t);r!=null&&r.startsWith(this.storageKey)&&(localStorage.removeItem(r),s.debug(`Cleared ${r}`),++e);}return e}spyClear(){let e=0;for(let t=0;t<localStorage.length;t++){const r=localStorage.key(t);r!=null&&r.startsWith(`${this.storageKey}-spy`)&&(localStorage.removeItem(r),s.debug(`Cleared ${r}`),++e);}return e}}const i=new v("kwack.mavri.tsc.rocks");class s{static info(e,...t){console.info(`%c[TSC Companion] ${e}`,`color: ${g.Colours.Info}`,...t);}static warn(e,...t){console.log(`%c[TSC Companion] ${e}`,`color: ${g.Colours.Warn}`,...t);}static error(e,...t){console.error(`%c[TSC Companion] ${e}`,`color: ${g.Colours.Error}`,...t);}static debug(e,...t){i.getToggle("debug-logs")&&console.log(`%c[TSC Companion] ${e}`,`color: ${g.Colours.Debug}`,...t);}}class h{constructor({name:e,description:t,shouldRun:r,start:a}){u(this,"name");u(this,"description");u(this,"shouldRun");u(this,"start");this.name=e,this.description=t,this.shouldRun=r,this.start=a;}}function m(n,e){return new Promise((t,r)=>{let a;if(document.querySelectorAll(n).length)return t(document.querySelector(n));const o=new MutationObserver(()=>{if(document.querySelectorAll(n).length)return o.disconnect(),a!=null&&clearTimeout(a),t(document.querySelector(n))});o.observe(document.body,{childList:!0,subtree:!0}),e&&(a=setTimeout(()=>{o.disconnect(),t(null);},e));})}const x=12*60*60*1e3;function C(n){const e=i.getJSON(`spy-${n}`);if(e){if(e.insertedAt&&new Date().getTime()-new Date(e.insertedAt).getTime()<x)return s.debug("Spy cache still valid"),Promise.resolve(e);s.debug("Spy cache expired, fetching new data"),i.setJSON(`spy-${n}`,null);}return new Promise((t,r)=>{(GM.xmlHttpRequest??GM.xmlhttpRequest)({method:"POST",url:"https://tsc.diicot.cc/stats/update",headers:{authorization:"10000000-6000-0000-0009-000000000001","x-requested-with":"XMLHttpRequest","Content-Type":"application/json"},data:JSON.stringify({apiKey:i.get("api-key")??"",userId:n}),onload(o){const l=JSON.parse(o.responseText);console.log(l),!("error"in l)&&l.success&&i.setJSON(`spy-${n}`,{...l,insertedAt:new Date().getTime()}),t(l);},onerror(){r({success:!1,code:999});},timeout:5e3});})}async function D(){if(i.get("api-key")===null)return {error:!0,message:"API Key not set"};const n=i.getJSON("user-data");if(n){if(n.insertedAt&&new Date().getTime()-new Date(n.insertedAt).getTime()<x)return s.debug("User cache still valid"),n;s.debug("User cache expired, fetching new data"),i.setJSON("user-data",null);}const e=await fetch(`https://api.torn.com/user/?selections=basic&key=${i.get("api-key")}`);if(!e.ok)return {error:!0,message:e.statusText};const t=await e.json();return t.error?{error:!0,message:t.error.error}:(i.setJSON("user-data",{...t,insertedAt:new Date().getTime()}),t)}function c(n,e=2){return Intl.NumberFormat("en-US",{notation:"compact",maximumFractionDigits:e,minimumFractionDigits:e}).format(n)}const A=new h({name:"Profile Page",description:"Shows a user's spy on their profile page",shouldRun:async function(){return i.getToggle(this.name)&&window.location.pathname==="/profiles.php"},start:async()=>{const n=await m(".empty-block",15e3);if(n===null){s.warn("Could not find the empty block on the profile page");return}const e=window.location.search.split("XID=")[1];if(!i.get("api-key")){s.warn("No API key found, cannot fetch spy");return}const r=await C(e);if("error"in r){s.error(r.message);return}if(!r.success){s.error(`Failed to fetch spy: ${r.code}`);return}const{estimate:a,statInterval:o}=r.spy;$(n).append($("<table>").addClass("tsc-stat-table").append($("<tr>").append($("<th>").text("Estimated Stats")).append($("<th>").text("Min")).append($("<th>").text("Max")).append($("<th>").text("Battle Score"))).append($("<tr>").append($("<td>").text(c(BigInt(a.stats)))).append($("<td>").text(o!=null&&o.battleScore?c(BigInt(o.min)):"N/A")).append($("<td>").text(o!=null&&o.battleScore?c(BigInt(o.max)):"N/A")).append($("<td>").text(o!=null&&o.battleScore?o.battleScore:"N/A"))));}}),N=new h({name:"Faction - Normal",description:"Shows a list of spies on the faction page",shouldRun:async function(){return i.getToggle(this.name)&&window.location.href.includes("factions.php?step=profile")},start:async function(){const n=await m(".faction-info-wrap.restyle.another-faction .table-body > li:nth-child(1)",15e3);if(n===null){s.warn(`${this.name}: Failed to find element to append to.`);return}const e=$(n).parent().parent()[0];$(e).find("li").each((t,r)=>{const a=$(r).find('[class*="userInfoBox"]')[0];//! This is a bit of a hack, but it works for now
	if($(a).css("width","157px"),a===void 0){s.warn("Failed to find infoBox",r);return}const o=$(a).find('a[href^="/profiles.php?XID="]')[0];if(o===void 0){s.warn("Failed to find userHref",a);return}const l=o.href.split("XID=")[1];C(l).then(p=>{if("error"in p||p.success!==!0){s.warn(`Failed to find spy for ${l}`,p);return}const{estimate:y,statInterval:d}=p.spy;let b=c(y.stats,1),w=`Estimate: ${c(y.stats,2)}`;d!=null&&d.battleScore&&(b=`${c(BigInt(d.min),1)} - ${c(BigInt(d.max),1)}`,w+=`<br>Interval: ${c(BigInt(d.min),2)} - ${c(BigInt(d.max),2)}<br>Battle Score: ${c(d.battleScore,2)}`),$(a).after($("<div>").addClass("tsc-faction-spy").text(b).attr("title",w));});});}}),f=Object.freeze(Object.defineProperty({__proto__:null,FactionNormal:N,ProfilePage:A},Symbol.toStringTag,{value:"Module"})),S=new h({name:"Settings Panel",description:"Adds a settings panel to your own faction page.",shouldRun:async function(){return window.location.href.includes("factions.php?step=your")},start:async function(){var r;const n=await m("#factions > ul",15e3);if(n===null){s.warn(`${this.name}: Failed to find element to append to.`);return}if((r=n.nextElementSibling)!=null&&r.classList.contains("tsc-accordion")){s.warn(`${this.name}: Element already exists`);return}s.debug("Features:",Object.values(f));const e=await D(),t="error"in e?$("<div>").text("Welcome!"):$("<div>").html(`Hey, ${$("<div>").addClass("tsc-header-username").text(e.name).prop("outerHTML")}!`);$(n).after($("<details>").addClass("tsc-accordion").append($("<summary>").text("TSC Settings")).append($("<div>").addClass("tsc-header").append(t),$("<p>").css("margin-top","5px").text("This is the settings panel for the Torn Spies Central script."),$("<p>").text("Here you can configure the settings to your liking. Please note that changes will be saved automatically."),$("<br>"),$("<div>").addClass("tsc-setting-entry").append($("<input>").attr("type","checkbox").attr("id","enable").prop("checked",i.getToggle("enable")).on("change",function(){i.set("enable",$(this).prop("checked")),s.debug(`Set enable to ${$(this).prop("checked")}`);})).append($("<p>").text("Enable Script")),$("<div>").addClass("tsc-setting-entry").append($("<label>").attr("for","api-key").text("API Key"),$("<input>").attr("type","text").attr("id","api-key").attr("placeholder","Paste your key here...").addClass("tsc-key-input").addClass("tsc-blur").val(i.get("api-key")||"").on("change",function(){const a=$(this).val();if(typeof a!="string"){s.warn("API Key is not a string.");return}if(!/^[a-zA-Z0-9]{16}$/.test(a)){s.warn("API Key is not valid."),$(this).css("outline","1px solid red");return}$(this).css("outline","none"),a!==i.get("api-key")&&(i.set("api-key",a),s.debug(`Set api-key to ${a}`));})),$("<br>"),$("<p>").text("Feature toggles:"),Object.values(f).map(a=>$("<div>").append($("<div>").addClass("tsc-setting-entry").append($("<input>").attr("type","checkbox").attr("id",a.name).prop("checked",i.getToggle(a.name)).on("change",function(){i.set(a.name,$(this).prop("checked")),s.debug(`Set ${a.name} to ${$(this).prop("checked")}`);})).append($("<p>").text(a.name))).append($("<p>").text(a.description))),$("<br>"),$("<p>").text("The following buttons need to be double clicked to prevent accidental clicks.").css("margin-bottom","10px"),$("<button>").text("Clear cached spies").addClass("tsc-button").css("margin-right","10px").on("dblclick",async function(){const a=i.spyClear();s.debug("Cleared all cached spies");const o=$(this);o.animate({opacity:0},"slow",function(){o.text(`Cleared ${a} spies`);}).animate({opacity:1},"slow"),setTimeout(function(){o.animate({opacity:0},"slow",function(){o.text("Clear cached spies");}).animate({opacity:1},"slow");},3e3);}),$("<button>").text("Clear all cache").addClass("tsc-button").on("dblclick",async function(){const a=i.fullClear();s.debug("Cleared all cache");const o=$(this);o.animate({opacity:0},"slow",function(){o.text(`Cleared ${a} items`);}).animate({opacity:1},"slow"),setTimeout(function(){o.animate({opacity:0},"slow",function(){o.text("Clear all cache");}).animate({opacity:1},"slow");},3e3);}),$("<br>"),$("<br>"),$("<p>").text("Debug settings:"),$("<div>").addClass("tsc-setting-entry").append($("<input>").attr("type","checkbox").attr("id","debug-logs").prop("checked",i.getToggle("debug-logs")).on("change",function(){i.set("debug-logs",$(this).prop("checked"));})).append($("<p>").text("Extra debug logs"))));}});async function O(){if(await S.shouldRun()===!0&&(s.info("Settings panel feature started"),await S.start()),i.getToggle("enable")===!1){s.info("TSC is disabled");return}s.info("Starting TSC features...");for(const n of Object.values(f)){if(await n.shouldRun()===!1){s.info(`${n.name} feature not applicable`);continue}try{await n.start(),s.info(`${n.name} feature started`);}catch(e){s.error(`Failed to start ${n.name} feature:`,e);}}}O().catch(n=>{s.error("TSC failed catastrophically:",n);});

})();