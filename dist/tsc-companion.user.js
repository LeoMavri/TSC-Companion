// ==UserScript==
// @name         TSC Companion - Next
// @namespace    TSC
// @version      next-9
// @author       mavri [2402357]
// @description  A very early version of the new TSC Companion. Special thanks to Kwack [2190604]
// @copyright    2024, diicot.cc
// @icon         https://i.imgur.com/8eydsOA.png
// @updateURL    https://github.com/LeoMavri/TSC-Companion/raw/next/dist/tsc-companion.user.js
// @match        https://www.torn.com/profiles.php?*
// @match        https://www.torn.com/factions.php*
// @connect      api.torn.com
// @connect      tsc.diicot.cc
// @grant        GM.xmlHttpRequest
// @grant        GM_addStyle
// @run-at       document-end
// ==/UserScript==

(t=>{if(typeof GM_addStyle=="function"){GM_addStyle(t);return}const o=document.createElement("style");o.textContent=t,document.head.append(o)})(" body{--tsc-bg-color: #f0f0f0;--tsc-border-color: #ccc;--tsc-input-color: #ccc;--tsc-text-color: #000;--tsc-hover-color: #ddd}body.dark-mode{--tsc-bg-color: #333;--tsc-border-color: #444;--tsc-input-color: #504f4f;--tsc-text-color: #ccc;--tsc-hover-color: #555}table.tsc-stat-table{width:100%;border-collapse:collapse;color:var(--tsc-text-color);background-color:var(--tsc-bg-color)}table.tsc-stat-table th,table.tsc-stat-table td{border:1px solid var(--tsc-border-color);color:var(--tsc-text-color);padding:4px;text-align:center}table.tsc-stat-table th{background-color:var(--tsc-bg-color);color:var(--tsc-text-color)}.tsc-faction-spy{background-color:var(--tsc-bg-color);color:var(--tsc-text-color);border:1px solid var(--tsc-border-color);border-radius:5px;padding:3px 5px;cursor:pointer;margin-left:auto;margin-right:2px}.tsc-chain-spy{background-color:var(--tsc-bg-color);color:var(--tsc-text-color);border:1px solid var(--tsc-border-color);font-size:10px;display:flex;vertical-align:middle;justify-content:center;align-items:center;width:200%;height:15px;border-radius:5px;padding:3px;margin-left:2px;cursor:pointer}.respect{margin-left:32px!important}.attack-number{min-width:45px!important}.tsc-accordion{background-color:var(--tsc-bg-color);border:1px solid var(--tsc-border-color);border-radius:5px;margin:10px 0;padding:10px}.tsc-header{display:flex;justify-content:space-between;align-items:center;font-weight:700;font-size:1.2em;margin-top:10px;margin-bottom:10px}.tsc-header-username{font-style:italic;display:inline}.tsc-setting-entry{display:flex;align-items:center;gap:5px;margin-top:10px;margin-bottom:5px}.tsc-key-input{width:120px;padding-left:5px;background-color:var(--tsc-input-color);color:var(--tsc-text-color)}.tsc-button{background-color:var(--tsc-bg-color);color:var(--tsc-text-color);border:1px solid var(--tsc-border-color);transition:background-color .5s;border-radius:5px;padding:5px 10px;cursor:pointer}.tsc-button:hover{background-color:var(--tsc-hover-color);transition:background-color .5s}.tsc-blur{filter:blur(3px);transition:filter 2s}.tsc-blur:focus,.tsc-blur:active{transition-duration:.5s;filter:blur(0)} ");

(function () {
	'use strict';

	var v=Object.defineProperty;var _=(a,t,e)=>t in a?v(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var m=(a,t,e)=>(_(a,typeof t!="symbol"?t+"":t,e),e);const S={Colours:{Info:"#05668D",Warn:"#EDDEA4",Error:"#ff0000",Debug:"#5C415D"}};class R{constructor(t){m(this,"storageKey");this.storageKey=t;}get(t){return localStorage.getItem(`${this.storageKey}-${t}`)}set(t,e){localStorage.setItem(`${this.storageKey}-${t}`,e);}getToggle(t){return this.get(t)==="true"}getJSON(t){const e=this.get(t);return e===null?null:JSON.parse(e)}setJSON(t,e){this.set(t,JSON.stringify(e));}fullClear(){let t=0;for(let e=0;e<localStorage.length;e++){const i=localStorage.key(e);i!=null&&i.startsWith(this.storageKey)&&(localStorage.removeItem(i),++t);}return t}spyClear(){let t=0;for(let e=0;e<localStorage.length;e++){const i=localStorage.key(e);i!=null&&i.startsWith(`${this.storageKey}-spy`)&&(localStorage.removeItem(i),++t);}return t}}const o=new R("kwack.mavri.tsc.rocks");class s{static info(t,...e){console.info(`%c[TSC Companion] ${t}`,`color: ${S.Colours.Info}`,...e);}static warn(t,...e){console.log(`%c[TSC Companion] ${t}`,`color: ${S.Colours.Warn}`,...e);}static error(t,...e){console.error(`%c[TSC Companion] ${t}`,`color: ${S.Colours.Error}`,...e);}static debug(t,...e){o.getToggle("debug-logs")&&console.log(`%c[TSC Companion] ${t}`,`color: ${S.Colours.Debug}`,...e);}}class C{constructor({name:t,description:e,shouldRun:i,start:n}){m(this,"name");m(this,"description");m(this,"shouldRun");m(this,"start");this.name=t,this.description=e,this.shouldRun=i,this.start=n;}}function y(a,t){return new Promise((e,i)=>{let n;if(document.querySelectorAll(a).length)return e(document.querySelector(a));const c=new MutationObserver(()=>{if(document.querySelectorAll(a).length)return c.disconnect(),n!=null&&clearTimeout(n),e(document.querySelector(a))});c.observe(document.body,{childList:!0,subtree:!0}),t&&(n=setTimeout(()=>{c.disconnect(),e(null);},t));})}const I=12*60*60*1e3;function x(a){const t=o.getJSON(`spy-${a}`);if(t){if(t.insertedAt&&new Date().getTime()-new Date(t.insertedAt).getTime()<I)return s.debug("Spy cache still valid"),Promise.resolve(t);s.debug("Spy cache expired, fetching new data"),o.setJSON(`spy-${a}`,null);}return new Promise((e,i)=>{(GM.xmlHttpRequest??GM.xmlhttpRequest)({method:"POST",url:"https://tsc.diicot.cc/stats/update",headers:{authorization:"10000000-6000-0000-0009-000000000001","x-requested-with":"XMLHttpRequest","Content-Type":"application/json"},data:JSON.stringify({apiKey:o.get("api-key")??"",userId:a}),onload(c){const r=JSON.parse(c.responseText);s.debug("Spy response",r),!("error"in r)&&r.success&&o.setJSON(`spy-${a}`,{...r,insertedAt:new Date().getTime()}),e(r);},onerror(c){e({error:!0,message:`Failed to fetch spy: ${c.statusText}`});},onabort(){e({error:!0,message:"Request aborted"});},ontimeout(){e({error:!0,message:"Request timed out"});},timeout:5e3});})}async function B(){if(o.get("api-key")===null)return {error:!0,message:"API Key not set"};const a=o.getJSON("user-data");if(a){if(a.insertedAt&&new Date().getTime()-new Date(a.insertedAt).getTime()<I)return s.debug("User data cache still valid"),a;s.debug("User data cache expired, fetching new data"),o.setJSON("user-data",null);}const t=await fetch(`https://api.torn.com/user/?selections=basic&key=${o.get("api-key")}&comment=TSC-Next`);if(!t.ok)return {error:!0,message:t.statusText};const e=await t.json();return e.error?{error:!0,message:e.error.error}:(o.setJSON("user-data",{...e,insertedAt:new Date().getTime()}),e)}function l(a,t=2){return Intl.NumberFormat("en-US",{notation:"compact",maximumFractionDigits:t,minimumFractionDigits:t}).format(a)}const L=".empty-block",M=new C({name:"Profile Page",description:"Shows a user's spy on their profile page",shouldRun:async function(){return o.getToggle(this.name)&&window.location.pathname==="/profiles.php"},start:async function(){const a=await y(L,15e3);if(a===null){s.warn(`${this.name}: Could not find the empty block on the profile page`);return}const t=window.location.search.split("XID=")[1],e=await x(t);if("error"in e){s.error(`${this.name}: Failed to fetch spy`,e);return}if(e.success!==!0){s.error(`${this.name}: Failed to fetch spy`,e);return}const{estimate:i,statInterval:n}=e.spy;$(a).append($("<table>").addClass("tsc-stat-table").attr("title",`Inteval: ${n!=null&&n.lastUpdated?new Date(n.lastUpdated).toLocaleString():"N/A"}<br>Estimate: ${new Date(i.lastUpdated).toLocaleString()}<br>Cache: ${new Date(e.insertedAt).toLocaleString()}`).append($("<tr>").append($("<th>").text("Estimated Stats")).append($("<th>").text("Min")).append($("<th>").text("Max")).append($("<th>").text("Battle Score")).append($("<th>").text("Fair Fight"))).append($("<tr>").append($("<td>").text(l(BigInt(i.stats)))).append($("<td>").text(n!=null&&n.battleScore?l(BigInt(n.min)):"N/A")).append($("<td>").text(n!=null&&n.battleScore?l(BigInt(n.max)):"N/A")).append($("<td>").text(n!=null&&n.battleScore?l(n.battleScore):"N/A")).append($("<td>").text(n!=null&&n.battleScore?n.fairFight:"N/A"))));}}),P=".faction-info-wrap.restyle.another-faction .table-body > li:nth-child(1)",q='[class*="userInfoBox"]',J='a[href^="/profiles.php?XID="]',H=new C({name:"Faction - Normal",description:"Shows a list of spies on the faction page",shouldRun:async function(){return o.getToggle(this.name)&&window.location.href.includes("factions.php?step=profile")},start:async function(){const a=await y(P,15e3);if(a===null){s.warn(`${this.name}: Failed to find element to append to.`);return}const t=$(a).parent().parent()[0];$(t).find("li").each((e,i)=>{const n=$(i).find(q)[0];//! This is a bit of a hack, but it works for now
	if($(n).css("width","169px"),$(n).css("overflow","hidden"),$(n).css("text-overflow","ellipsis"),n===void 0){s.debug(`${this.name}: Failed to find the player's profile box.`,i);return}const c=$(n).find(J)[0];if(c===void 0){s.debug(`${this.name}: Failed to find user's ID`,n);return}const r=c.href.split("XID=")[1];x(r).then(h=>{if("error"in h||h.success!==!0){s.warn(`${this.name}: Failed to find spy for ${r}`,h);return}const{estimate:f,statInterval:u}=h.spy;let d=l(f.stats,1),g=`Estimate: ${l(f.stats,2)}`;u!=null&&u.battleScore&&(d=`${l(BigInt(u.min),1)} - ${l(BigInt(u.max),1)}`,g+=`<br>Interval: ${l(BigInt(u.min),2)} - ${l(BigInt(u.max),2)}<br>Battle Score: ${l(u.battleScore,2)}`),$(n).after($("<div>").addClass("tsc-faction-spy").text(d).attr("title",g));});});}}),w='[class^="warListItem"][class*="first-in-row"]',A='[class^="chain-attacks-list"]',K='[class^="honorWrap"]',j=new C({name:"Faction - Chain",description:"Shows spies on the chain page",shouldRun:async function(){return !o.getToggle(this.name)||!window.location.href.includes("factions.php?step=your")?!1:await y(w)!==null},start:async function(){let a=null;const t=document.querySelector(w),e=new MutationObserver(async i=>{if(i.length===0)return;const n=document.querySelector(w);if(!(n!=null&&n.classList.contains("act")))return;s.debug(`${this.name}: Chain is active`),a!==null&&(a.disconnect(),a=null);const c=await y(A,15e3);if(!c){s.debug(`${this.name}: Could not find attacks list (element did not show up in time)`);return}const r=async()=>{$(`${A} li`).each(function(h,f){const u=$(f).find(K);for(let d=0;d<=1;d++){const g=u[d];if($(g).parent().find(".tsc-chain-spy").length>0)continue;const T=$(g).find("a").attr("href");if(!T){s.warn("Faction - Chain: Failed to find ID.");return}const k=T.split("XID=")[1];x(k).then(b=>{if("error"in b||b.success!==!0){s.warn(`Faction - Chain: Failed to find spy for ${k}`,b);return}const{estimate:E,statInterval:p}=b.spy;let O=l(E.stats,1),F=`Estimate: ${l(E.stats,2)}`;p!=null&&p.battleScore&&(O=`${l(BigInt(p.min),1)} - ${l(BigInt(p.max),1)}`,F+=`<br>Interval: ${l(BigInt(p.min),2)} - ${l(BigInt(p.max),2)}<br>Battle Score: ${l(p.battleScore,2)}`),$(g).append($("<div>").addClass("tsc-chain-spy").text(O).attr("title",F));});}});};a=new MutationObserver(async h=>{let f=!1;$(`${w} li`).each(function(u,d){$(d).find(".tsc-chain-spy").length===0&&f===!1&&(f=!0,r());});}),await r(),a.observe(c,{childList:!0,subtree:!0});});if(!t){s.error(`${this.name}: Could not find element`);return}e.observe(t,{attributes:!0,attributeFilter:["class"]});}}),N=Object.freeze(Object.defineProperty({__proto__:null,FactionChain:j,FactionNormal:H,ProfilePage:M},Symbol.toStringTag,{value:"Module"})),U="#factions > ul",D=new C({name:"Settings Panel",description:"Adds a settings panel to your own faction page.",shouldRun:async function(){return window.location.href.includes("factions.php?step=your")},start:async function(){var i;const a=await y(U,15e3);if(a===null){s.warn(`${this.name}: Failed to find element to append to.`);return}if((i=a.nextElementSibling)!=null&&i.classList.contains("tsc-accordion")){s.warn(`${this.name}: Element already exists`);return}const t=await B(),e="error"in t?$("<div>").text("Welcome!"):$("<div>").html(`Hey, ${$("<div>").addClass("tsc-header-username").text(t.name).prop("outerHTML")}!`);$(a).after($("<details>").addClass("tsc-accordion").append($("<summary>").text("TSC Settings")).append($("<div>").addClass("tsc-header").append(e),$("<p>").css("margin-top","5px").text("This is the settings panel for the Torn Spies Central script."),$("<p>").text("Here you can configure the settings to your liking. Please note that changes will be saved automatically."),$("<p>").css("margin-top","5px").text("Note: Currently, the script works best with honor bars turned off. If you have them on, all spies (except on the profile page) will be unreadable. You can manage this in Settings -> General Settings -> Honor Names -> Off"),$("<br>"),$("<div>").addClass("tsc-setting-entry").append($("<input>").attr("type","checkbox").attr("id","enable").prop("checked",o.getToggle("enable")).on("change",function(){o.set("enable",$(this).prop("checked"));})).append($("<p>").text("Enable Script")),$("<div>").addClass("tsc-setting-entry").append($("<label>").attr("for","api-key").text("API Key"),$("<input>").attr("type","text").attr("id","api-key").attr("placeholder","Paste your key here...").addClass("tsc-key-input").addClass("tsc-blur").val(o.get("api-key")||"").on("change",function(){const n=$(this).val();if(typeof n=="string"){if(!/^[a-zA-Z0-9]{16}$/.test(n)){$(this).css("outline","1px solid red");return}$(this).css("outline","none"),n!==o.get("api-key")&&o.set("api-key",n);}})),$("<br>"),$("<p>").text("Feature toggles:"),Object.values(N).map(n=>$("<div>").append($("<div>").addClass("tsc-setting-entry").append($("<input>").attr("type","checkbox").attr("id",n.name).prop("checked",o.getToggle(n.name)).on("change",function(){o.set(n.name,$(this).prop("checked"));})).append($("<p>").text(n.name))).append($("<p>").text(n.description))),$("<br>"),$("<p>").text("The following buttons require a confirmation before anything is deleted.").css("margin-bottom","10px"),$("<button>").text("Clear cached spies").addClass("tsc-button").css("margin-right","10px").on("click",async function(){if(!confirm("Are you sure you want to clear cached spies?"))return;const c=o.spyClear();s.debug(`Cleared ${c} spies from cache.`);const r=$(this);r.animate({opacity:0},"slow",function(){r.text(`Cleared ${c} spies`);}).animate({opacity:1},"slow"),setTimeout(function(){r.animate({opacity:0},"slow",function(){r.text("Clear cached spies");}).animate({opacity:1},"slow");},3e3);}),$("<button>").text("Clear all cache").addClass("tsc-button").on("click",async function(){if(!confirm("Are you sure you want to clear all cache?"))return;const c=o.fullClear();s.debug(`Cleared ${c} items in cache.`);const r=$(this);r.animate({opacity:0},"slow",function(){r.text(`Cleared ${c} items`);}).animate({opacity:1},"slow"),setTimeout(function(){r.animate({opacity:0},"slow",function(){r.text("Clear all cache");}).animate({opacity:1},"slow");},3e3);}),$("<br>"),$("<br>"),$("<p>").text("Debug settings:"),$("<div>").addClass("tsc-setting-entry").append($("<input>").attr("type","checkbox").attr("id","debug-logs").prop("checked",o.getToggle("debug-logs")).on("change",function(){o.set("debug-logs",$(this).prop("checked"));})).append($("<p>").text("Extra debug logs"))));}});async function W(){if(await D.shouldRun()===!0&&(s.info("Settings panel feature started"),await D.start()),o.getToggle("enable")===!1){s.info("TSC is disabled");return}s.info("Starting TSC features...");for(const a of Object.values(N)){if(await a.shouldRun()===!1){s.debug(`${a.name} feature not applicable`);continue}try{await a.start(),s.info(`${a.name} feature started`);}catch(t){s.error(`Failed to start '${a.name}'`,t);}}}W().catch(a=>{s.error("TSC failed catastrophically:",a);});

})();